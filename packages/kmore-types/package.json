{
  "name": "kmore-types",
  "author": "waiting",
  "version": "0.7.0",
  "description": "Retrieve types info from ts file",
  "keywords": [
    "AST",
    "compiler",
    "typescript",
    "ts"
  ],
  "bin": {},
  "browser": "",
  "es2015": "",
  "main": "./dist/index.cjs.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "bugs": {
    "url": "https://github.com/waitingsong/kmore-types/issues"
  },
  "homepage": "https://waitingsong.github.io/kmore-types/",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/waitingsong/kmore-types.git"
  },
  "license": "MIT",
  "dependencies": {
    "@waiting/shared-core": "3",
    "@waiting/shared-types": "1",
    "rxjs": "^6.5.2",
    "rxwalker": "^3.0.0",
    "source-map-support": "^0.5.13"
  },
  "devDependencies": {
    "@types/source-map-support": "*",
    "cross-env": "5"
  },
  "peerDependencies": {
    "typescript": "3"
  },
  "engines": {
    "node": ">=10.16.0"
  },
  "scripts": {
    "bp:add": "git remote add bp https://github.com/waitingsong/npm-base",
    "bp:sync": "git fetch --all -v && git merge bp/master -m \"Merge remote-tracking branch 'bp/master'\"",
    "build": "npm run lint && npm run tsc && npm run rp",
    "devbuild": "npm run clean && npm run tsc:dev && npm run rp",
    "clean": "rm -rf dist/* .vscode/.tsbuildinfo .vscode/.tsbuildinfo.* ",
    "cov": "cross-env TS_NODE_PROJECT=test/tsconfig.json nyc mocha",
    "cov:coveralls": "cross-env TS_NODE_PROJECT=test/tsconfig.json nyc mocha && nyc report --reporter=text-lcov | coveralls",
    "doc": "typedoc src/index.ts src/lib/index.ts src/lib/model.ts",
    "jslint": "eslint --fix dist/**/*.js",
    "link_global": "npm link typescript",
    "lint": "eslint --fix {src,test}/**/*.ts",
    "prepublishOnly": "npm run clean && npm run build",
    "release": "standard-version -r",
    "release:first": "standard-version --first-release",
    "repo:init": "sh .githooks/init-repo.sh",
    "rp": "rollup -c rollup.config.js",
    "rp:w": "npm run tsc:w | rollup -wc rollup.config.js",
    "test": "cross-env TS_NODE_PROJECT=test/tsconfig.json mocha --opts test/mocha.opts",
    "test:browser": "cd .config && npm run browser && cd ..",
    "browser:debug": "cd .config && npm run debug && cd ..",
    "tsc": "tsc -p tsconfig.json",
    "tsc:dev": "tsc -p tsconfig.dev.json",
    "tsc:w": "tsc -p tsconfig.json -w"
  }
}
